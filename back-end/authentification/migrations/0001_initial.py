# Generated by Django 5.0.1 on 2024-02-06 05:27

import django.db.models.deletion
import django.utils.timezone
from django.conf import settings
from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('auth', '0012_alter_user_first_name_max_length'),
    ]

    operations = [
        migrations.CreateModel(
            name='Gender',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(blank=True, max_length=255, null=True)),
            ],
            options={
                'verbose_name': 'Gender',
                'verbose_name_plural': 'Gender',
                'db_table': 'table_gender',
            },
        ),
        migrations.CreateModel(
            name='Categories',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(blank=True, max_length=255, null=True)),
                ('logo', models.ImageField(blank=True, null=True, upload_to='logo/')),
                ('groups', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='groupCategories', to='auth.group')),
            ],
            options={
                'verbose_name': 'Categories',
                'verbose_name_plural': 'Categories',
                'db_table': 'table_categories',
            },
        ),
        migrations.CreateModel(
            name='CustomUser',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('password', models.CharField(max_length=128, verbose_name='password')),
                ('last_login', models.DateTimeField(blank=True, null=True, verbose_name='last login')),
                ('is_superuser', models.BooleanField(default=False, help_text='Designates that this user has all permissions without explicitly assigning them.', verbose_name='superuser status')),
                ('email', models.EmailField(max_length=254, null=True, unique=True)),
                ('phone', models.CharField(max_length=30, null=True, unique=True)),
                ('first_name', models.CharField(blank=True, max_length=255, null=True)),
                ('last_name', models.CharField(blank=True, max_length=255, null=True)),
                ('address', models.CharField(blank=True, max_length=255, null=True)),
                ('information', models.TextField(blank=True, null=True)),
                ('date_of_birth', models.DateField(blank=True, null=True)),
                ('avatar', models.ImageField(blank=True, null=True, upload_to='avatar/')),
                ('is_active', models.BooleanField(default=True)),
                ('is_staff', models.BooleanField(default=False)),
                ('date_joined', models.DateTimeField(default=django.utils.timezone.now)),
                ('groups', models.ManyToManyField(blank=True, help_text='The groups this user belongs to. A user will get all permissions granted to each of their groups.', related_name='user_set', related_query_name='user', to='auth.group', verbose_name='groups')),
                ('user_permissions', models.ManyToManyField(blank=True, help_text='Specific permissions for this user.', related_name='user_set', related_query_name='user', to='auth.permission', verbose_name='user permissions')),
                ('categories', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='authentification.categories')),
                ('gender', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='authentification.gender')),
            ],
            options={
                'verbose_name': 'CustomUser',
                'verbose_name_plural': 'CustomUsers',
                'db_table': 'table_user',
            },
        ),
        migrations.CreateModel(
            name='Hospital',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(blank=True, max_length=255, null=True)),
                ('address', models.CharField(blank=True, max_length=255, null=True)),
                ('phone', models.CharField(blank=True, max_length=255, null=True)),
                ('logo', models.ImageField(blank=True, null=True, upload_to='logo/')),
                ('create_at', models.DateField(auto_now_add=True, null=True)),
                ('author', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='authorHospital', to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'verbose_name': 'Hospital',
                'verbose_name_plural': 'Hospitals',
                'db_table': 'table_hospital',
            },
        ),
        migrations.AddField(
            model_name='customuser',
            name='hospital',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='authentification.hospital'),
        ),
        migrations.CreateModel(
            name='MakeAppointments',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('content', models.TextField(blank=True, null=True)),
                ('status', models.CharField(choices=[('IN_PROGRESS', 'IN_PROGRESS'), ('IN_QUEUE', 'IN_QUEUE'), ('CANCELLED', 'CANCELLED'), ('ONGOING', 'ONGOING'), ('COMPLETED', 'COMPLETED')], default='IN_PROGRESS', max_length=255)),
                ('timestamp', models.DateTimeField(blank=True, null=True)),
                ('create_at', models.DateField(auto_now_add=True, null=True)),
                ('doctor', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='doctorAppointment', to=settings.AUTH_USER_MODEL)),
                ('user', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='userAppointment', to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'verbose_name': 'Make Appointment',
                'verbose_name_plural': 'Make Appointments',
                'db_table': 'table_make_appointment',
            },
        ),
        migrations.CreateModel(
            name='Notification',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('notification_type', models.CharField(choices=[('PATIENT_SENT_APPOINTMENT', 'PATIENT_SENT_APPOINTMENT'), ('PATIENT_CANCELLED_APPOINTMENT', 'PATIENT_CANCELLED_APPOINTMENT'), ('PATIENT_SENDING_BACK_APPOINTMENT', 'PATIENT_SENDING_BACK_APPOINTMENT'), ('DOCTOR_CONFIRMED_APPOINTMENT', 'DOCTOR_CONFIRMED_APPOINTMENT'), ('DOCTOR_CANCELLED_APPOINTMENT', 'DOCTOR_CANCELLED_APPOINTMENT'), ('APPOINTMENT_IN_QUEUE', 'APPOINTMENT_IN_QUEUE'), ('APPOINTMENT_IS_COMPLETED', 'APPOINTMENT_IS_COMPLETED'), ('MESSAGE_PATIENT_SENT', 'MESSAGE_PATIENT_SENT'), ('MESSAGE_DOCTOR_SENT', 'MESSAGE_DOCTOR_SENT')], max_length=255)),
                ('is_seen', models.BooleanField(blank=True, default=False, null=True)),
                ('created_at', models.DateField(auto_now_add=True, null=True)),
                ('appointments', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='notificationAppointments', to='authentification.makeappointments')),
                ('user', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='notificationCustomUser', to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'verbose_name': 'Notification',
                'verbose_name_plural': 'Notification',
                'db_table': 'table_notification',
            },
        ),
        migrations.CreateModel(
            name='ReviewDoctors',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('rating', models.IntegerField(blank=True, default=0, null=True)),
                ('content', models.TextField(blank=True, null=True)),
                ('create_at', models.DateField(auto_now_add=True, null=True)),
                ('doctor', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='doctorRating', to=settings.AUTH_USER_MODEL)),
                ('user', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='userRating', to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'verbose_name': 'Review Doctor',
                'verbose_name_plural': 'Review Doctors',
                'db_table': 'table_review_doctors',
            },
        ),
        migrations.CreateModel(
            name='SavedDoctors',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('is_activate', models.BooleanField(blank=True, default=True, null=True)),
                ('create_at', models.DateField(auto_now_add=True, null=True)),
                ('doctor', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='doctorSaved', to=settings.AUTH_USER_MODEL)),
                ('user', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='userSaved', to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'verbose_name': 'Saved Doctor',
                'verbose_name_plural': 'Saved Doctors',
                'db_table': 'table_saved_doctors',
            },
        ),
        migrations.CreateModel(
            name='SmsHistory',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('code', models.IntegerField(blank=True, null=True)),
                ('user', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='smscode', to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'verbose_name': 'History User code',
                'verbose_name_plural': 'History User codes',
                'db_table': 'table_sms_history',
            },
        ),
    ]
